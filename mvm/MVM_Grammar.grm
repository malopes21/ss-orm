"Name"     = 'Enter the name of the grammar'
"Author"   = 'Enter your name'
"Version"  = 'The version of the grammar and/or language'
"About"    = 'A short description of the grammar'

"Start Symbol" = <Start>

! -------------------------------------------------
! Character Sets
! -------------------------------------------------

{WS}           = {Whitespace} - {CR} - {LF}
{String Chars} = {Printable} + {HT} - ["]

! -------------------------------------------------
! Terminals
! -------------------------------------------------

! The following defines the Whitespace terminal using the {WS}
! set - which excludes the carriage return and line feed 
! characters

Whitespace    = {WS}+
NewLine       = {CR}{LF} | {CR} | {LF}

Id    = {Letter}{AlphaNumeric}*
StringLiteral = '"' {String Chars}* '"'
DecimalLiteral = {Digit}+ 'd'?
HexaLiteral = {Digit}+ 'h'
CharLiteral = '''' {String Chars} ''''                           

! -------------------------------------------------
! Rules
! -------------------------------------------------

! The following rule defines a series of newline tokens.
! Use this rule rather than the newline terminal.

<nl>     ::= NewLine <nl>          !One or more
          |  NewLine

<nl Opt> ::= NewLine <nl Opt>      !Zero or more
          |  !Empty

! <nl opt> removes blank lines before first statement

<Start>   ::= <nl opt> <Program> <nl Opt>

<Program> ::= <DATA> <CODE> '.END'  
           
<DATA> ::= '.DATA' <nl> <Decls>
        
<Decls> ::= <Decl> <nl> <Decls> | 
       
<Decl> ::= Id <Tipo> <Valor> 
        
<Tipo> ::= 'DB' | 'DW'

<Valor> ::= StringLiteral | DecimalLiteral | HexaLiteral | CharLiteral
        
<CODE> ::= '.CODE' <nl> <Commands>
        
<Commands> ::= <Command> <nl> <Commands> |
            
<Command> ::= <Label> <nl Opt> <Statment> <Args>
           
<Label> ::= Id ':' |
        
<Statment> ::= 'COPY' | 'ADD' | 'SUB' | 'MUL' | 'DIV' | 'CMP' | 'JMP' | 'JG' | 'JGE' | 'JL' | 'JLE' | 'JE' | 'JNE' | 'LOAD' | 'STORE' | 'PUSH' | 'POP' | 'EXIT' | 'STDOUT' | 'STDIN'
            
<Args> ::= <Operan> <Args2> |
        
<Args2> ::= ',' <Operan> |
         
<Operan> ::= Id | DecimalLiteral | HexaLiteral | CharLiteral  
        

